package StringUtilsTests
import StringUtils

import LinkedList

@Test function testSplit()
	var list = "this is a string".split(" ")
	list.get(0).assertEquals("this")
	list.get(1).assertEquals("is")
	list.get(2).assertEquals("a")
	list.get(3).assertEquals("string")
	destroy list

	list = "this,is,a,string".split(",")
	list.get(0).assertEquals("this")
	list.get(1).assertEquals("is")
	list.get(2).assertEquals("a")
	list.get(3).assertEquals("string")
	destroy list

	list = "thisisastring".split(" ")
	(list.size() == 1).assertTrue()
	destroy list

@Test function testJoin()
	let list = new LinkedList<string>()
		..add("this", "is", "a", "string")

	list.join().assertEquals("thisisastring")
	list.joinBy(" ").assertEquals("this is a string")

	destroy list

@Test function testReduce()
	"reee      duu   cee".reduce("e").reduce("u").reduce(" ").assertEquals("re du ce")
	"redu      ce".reduce().assertEquals("redu ce")

@Test function testChar()
	char("/").toInt().assertEquals(47)
	char("\\").toInt().assertEquals(92)
	char("|").toInt().assertEquals(124)
